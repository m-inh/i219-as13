JavaPathfinder core system v8.0 (rev 31) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
UnsafeInc.main()

====================================================== search started: 1/28/20 6:55 PM
count: 2
count: 2
count: 1

====================================================== error 1
gov.nasa.jpf.vm.NoUncaughtExceptionsProperty
java.lang.AssertionError
        at UnsafeInc.main(UnsafeInc.java:15)


====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"ROOT" ,1/1,isCascaded:false}
      [3157 insn w/o sources]
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
      [2 insn w/o sources]
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
      [1 insn w/o sources]
  UnsafeInc.java:7               : Thread t1 = new UnsafeInc();
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
      [145 insn w/o sources]
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
  UnsafeInc.java:7               : Thread t1 = new UnsafeInc();
  UnsafeInc.java:8               : Thread t2 = new UnsafeInc();
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
      [145 insn w/o sources]
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
  UnsafeInc.java:8               : Thread t2 = new UnsafeInc();
  UnsafeInc.java:9               : t1.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  UnsafeInc.java:10              : Thread.sleep(1000);
      [4 insn w/o sources]
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SLEEP" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  UnsafeInc.java:11              : t2.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #3 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/3,isCascaded:false}
      [2 insn w/o sources]
  UnsafeInc.java:12              : t1.join();
      [1 insn w/o sources]
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"JOIN" ,1/2,isCascaded:false}
      [1 insn w/o sources]
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
  UnsafeInc.java:3               : (new FCounter()).inc();
      [1 insn w/o sources]
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
      [1 insn w/o sources]
  FCounter.java:2                : private static int x = 0;
  FCounter.java:1                : public class FCounter {
  UnsafeInc.java:3               : (new FCounter()).inc();
  FCounter.java:1                : public class FCounter {
      [1 insn w/o sources]
  FCounter.java:1                : public class FCounter {
  UnsafeInc.java:3               : (new FCounter()).inc();
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
      [1 insn w/o sources]
  UnsafeInc.java:1               : public class UnsafeInc extends Thread {
  UnsafeInc.java:3               : (new FCounter()).inc();
  FCounter.java:1                : public class FCounter {
      [1 insn w/o sources]
  FCounter.java:1                : public class FCounter {
  UnsafeInc.java:3               : (new FCounter()).inc();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  UnsafeInc.java:3               : (new FCounter()).inc();
  FCounter.java:9                : x++;
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  UnsafeInc.java:3               : (new FCounter()).inc();
  FCounter.java:9                : x++;
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  FCounter.java:9                : x++;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  FCounter.java:9                : x++;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  FCounter.java:9                : x++;
  FCounter.java:10               : }
------------------------------------------------------ transition #12 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"TERMINATE" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  UnsafeInc.java:13              : t2.join();
      [1 insn w/o sources]
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"JOIN" ,1/1,isCascaded:false}
  FCounter.java:9                : x++;
  FCounter.java:10               : }
------------------------------------------------------ transition #14 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"TERMINATE" ,1/1,isCascaded:false}
      [2 insn w/o sources]
  UnsafeInc.java:14              : System.out.println("count: " + FCounter.get());
      [2 insn w/o sources]
  UnsafeInc.java:14              : System.out.println("count: " + FCounter.get());
      [2 insn w/o sources]
  UnsafeInc.java:14              : System.out.println("count: " + FCounter.get());
  FCounter.java:5                : return x;
  UnsafeInc.java:14              : System.out.println("count: " + FCounter.get());
      [2 insn w/o sources]
  UnsafeInc.java:14              : System.out.println("count: " + FCounter.get());
      [2 insn w/o sources]
  UnsafeInc.java:14              : System.out.println("count: " + FCounter.get());
      [2 insn w/o sources]
  UnsafeInc.java:15              : assert FCounter.get() == 2;
  FCounter.java:5                : return x;
  UnsafeInc.java:15              : assert FCounter.get() == 2;
      [21 insn w/o sources]

====================================================== snapshot #1
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
        at UnsafeInc.main(UnsafeInc.java:15)


====================================================== results
error #1: gov.nasa.jpf.vm.NoUncaughtExceptionsProperty "java.lang.AssertionError  at UnsafeInc.main(Unsafe..."

====================================================== statistics
elapsed time:       00:00:00
states:             new=26,visited=6,backtracked=17,end=2
search:             maxDepth=15,constraints=0
choice generators:  thread=25 (signal=0,lock=5,sharedRef=5,threadApi=9,reschedule=6), data=0
heap:               new=409,released=61,maxLive=365,gcCycles=25
instructions:       3772
max memory:         245MB
loaded code:        classes=67,methods=1520

====================================================== search finished: 1/28/20 6:55 PM